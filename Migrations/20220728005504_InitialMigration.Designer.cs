// <auto-generated />
using System;
using HoPro.net.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HoProNetv2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220728005504_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HoPro.net.Model.Access_area", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("area")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("access_areas");
                });

            modelBuilder.Entity("HoPro.net.Model.Booking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("booking_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("departure_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("entry_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("roomId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("clientId");

                    b.HasIndex("roomId");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("HoPro.net.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("countryID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("countryID");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("HoPro.net.Model.Consumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("consumptions");
                });

            modelBuilder.Entity("HoPro.net.Model.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("HoPro.net.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Contract_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Social_Security")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employee_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HoPro.net.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("product_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("HoPro.net.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<string>("number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("room_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HoPro.net.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("access_areaID")
                        .HasColumnType("int");

                    b.Property<int?>("employeeId")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("access_areaID");

                    b.HasIndex("employeeId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("HoPro.net.Model.Booking", b =>
                {
                    b.HasOne("HoPro.net.Model.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientId");

                    b.HasOne("HoPro.net.Model.Room", "room")
                        .WithMany()
                        .HasForeignKey("roomId");

                    b.Navigation("client");

                    b.Navigation("room");
                });

            modelBuilder.Entity("HoPro.net.Model.Client", b =>
                {
                    b.HasOne("HoPro.net.Model.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryID");

                    b.Navigation("country");
                });

            modelBuilder.Entity("HoPro.net.Model.Consumption", b =>
                {
                    b.HasOne("HoPro.net.Model.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("HoPro.net.Model.User", b =>
                {
                    b.HasOne("HoPro.net.Model.Access_area", "access_area")
                        .WithMany()
                        .HasForeignKey("access_areaID");

                    b.HasOne("HoPro.net.Model.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.Navigation("access_area");

                    b.Navigation("employee");
                });
#pragma warning restore 612, 618
        }
    }
}
